apiVersion: dev.marketplace.cloud.google.com/v1alpha1
kind: DeploymentManagerTemplate
metadata:
  name: dmtemplate
deploymentManagerRef:
  group: dev.marketplace.cloud.google.com
  kind: DeploymentManagerAutogenTemplate
  name: autogen
zipFilePath: masocp-template-1.0.0.zip # {"$kpt-set":"zipPath"}
---
apiVersion: dev.marketplace.cloud.google.com/v1alpha1
kind: DeploymentManagerAutogenTemplate
metadata:
  name: autogen
spec:
  # See https://pkg.go.dev/github.com/GoogleCloudPlatform/marketplace-tools/mpdev/internal/apply?tab=doc#PackageInfo
  packageInfo:
    version: '1.0.0'
    osInfo:
      name: Red Hat Enterprise Linux CoreOS
      version: '8.5'
    components:
    - name: IBM Maximo Application Suite
      version: '8.9.0'
  # See https://github.com/GoogleCloudPlatform/marketplace-tools/docs/autogen-reference.md
  # for explanation of fields
  deploymentSpec:
    singleVm:
      bootDisk:
        diskSize:
          defaultSizeGb: 10
          minSizeGb: 10
        diskType:
          defaultType: pd-standard
      gceMetadataItems:
        - key: offeringType
          valueFromDeployInputField: offeringType
        - key: region 
          valueFromDeployInputField: region
        - key: publicDomain
          valueFromDeployInputField: publicDomain
        - key: bootnodeSGIngressCidrIp
          valueFromDeployInputField: bootnodeSGIngressCidrIp
        #Uniqustr created in gceStartupScript
        - key: clusterSize
          valueFromDeployInputField: clusterSize
        - key: entitledRegistryKey
          valueFromDeployInputField: entitledRegistryKey
        - key: openShiftPullSecret
          valueFromDeployInputField: openShiftPullSecret
        - key: masLicenseUrl
          valueFromDeployInputField: masLicenseUrl
        - key: masManageDBUser
          valueFromDeployInputField: masManageDBUser
        - key: masManageDBPassword
          valueFromDeployInputField: masManageDBPassword
        - key: masManageDBJdbcUrl
          valueFromDeployInputField: masManageDBJdbcUrl
        - key: masManageDBCertificateUrl
          valueFromDeployInputField: masManageDBCertificateUrl
        - key: importDemoData
          valueFromDeployInputField: importDemoData
        - key: sshPublicKey
          valueFromDeployInputField: sshPublicKey
        - key: slsEndpointUrl
          valueFromDeployInputField: slsEndpointUrl
        - key: slsRegistrationKey
          valueFromDeployInputField: slsRegistrationKey
        - key: slsPublicCertificateUrl
          valueFromDeployInputField: slsPublicCertificateUrl
        - key: udsEndpointUrl
          valueFromDeployInputField: udsEndpointUrl
        - key: udsAPIKey
          valueFromDeployInputField: udsAPIKey
        - key: udsPublicCertificateUrl
          valueFromDeployInputField: udsPublicCertificateUrl
        - key: googleCloudServiceAccount
          valueFromDeployInputField: googleCloudServiceAccount
        - key: googleProjectId
          valueFromDeployInputField: googleProjectId
        - key: emailNotification
          valueFromDeployInputField: emailNotification
        - key: smtpHost
          valueFromDeployInputField: smtpHost
        - key: smtpPort
          valueFromDeployInputField: smtpPort
        - key: smtpUsername
          valueFromDeployInputField: smtpUsername
        - key: smtpPassword
          valueFromDeployInputField: smtpPassword
        - key: notificattionEmailAddress
          valueFromDeployInputField: notificattionEmailAddress
      deployInput:
        sections:
        - fields:
          - name: offeringType
            required: true
            title: Offering Type
            stringDropdown:
              values:
                - MAS Core + Cloud Pak for Data
                - MAS Core + Manage (no Cloud Pak for Data)
              defaultValueIndex:
                value: 0
            tooltip: 
              "Select your preferred Suite offering type."
          - name: region
            required: true
            title: Region
            stringBox:
              defaultValue: "us-central1"
            tooltip: Deployment region
          - name: publicDomain
            title: Public domain
            stringBox:
              defaultValue: "MAS-Public-Domain"
            tooltip: 
              "Provide the public App Service domain that you created in the App Service Domains, for example: mas4aws.myorg.com."
          - name: bootnodeSGIngressCidrIp
            title: Bootnode NSG Ingress CIDR IP range
            stringBox:
              defaultValue: "0.0.0.0/0"
            tooltip:
              "Use CIDR notation to enter the IP addresses that can access the bootnode. For example, 192.12.33.3/32. To allow access from all IP addresses, enter 0.0.0.0/0."
          - name: clusterSize
            title: Cluster Size
            stringDropdown:
              values:
                - "small"
                - "medium"
                - "large"
              defaultValueIndex:
                value: 0
            tooltip: "Select your preferred cluster size. All master nodes (M) are Standard_D8s_v3 virtual machines. All worker nodes (W) are Standard_D16s_v3 instances. Choose from: small (3M, 3W, total memory: 288GB), medium (3M, 5W, total memory: 416GB), or large (5M, 7W, total memory: 608GB)."
          - name: entitledRegistryKey
            title: Entitled registry key
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the registry key that you downloaded from the IBM Container Library."
          - name: openShiftPullSecret
            title: OpenShift pull secret
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the JSON text from the pull secret file that you downloaded from the Red Hat Hybrid Cloud Console."
          - name: masLicenseUrl
            title: MAS license URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the URL (preferebly with XXX token) of your Suite license key file kept on the Cloud Storage Bucket, for example: https://xxxx.xxx.xx.x.net/masocpcontainer/entitlement.lic?[blob-sas-token] (Applicable only for BYOL product)"
          - name: masManageDBUser
            title: MAS Manage DB user
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the username that the Maximo Manage application uses to connect to the database."
          - name: masManageDBPassword
            title: MAS manage DB password
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the password that the Maximo Manage application uses to connect to the database."
          - name: masManageDBJdbcUrl
            title: MAS Manage DB JDBC URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the URL location of the database that the Maximo Manage application connects to, for example: jdbc:db2://1.2.3.4:50051/FTMDB:sslConnection=true"
          - name: masManageDBCertificateUrl
            title: MAS Manage DB certificate URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the Blob SAS location of the database's public certificate, for example: s3://masocp-license/db-certificate.crt"
          - name: importDemoData
            title: Import Demo Data
            stringDropdown:
              values:
                - "true"
                - "false"
              defaultValueIndex:
                value: 0
            tooltip:
              "Indicate whether you want to import demo data into the database. This might be useful for development or test environments."
          - name: sshPublicKey
            title: SSH public key
            stringBox:
              defaultValue: ""
            tooltip: 
              "Provide the public SSH key that you want to add to the bootnode, bastion host and cluster nodes."
          placement: MAIN
        - fields:
          - name: slsEndpointUrl
            title: SLS endpoint URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the endpoint URL that you retrieved from the 'masocp-<unique-string>' OpenShift route in the SLS namespace (ibm-sls-<unique-string>). URL should not have slash (/) at the end."
          - name: slsRegistrationKey
            title: SLS registration key
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the 'status.registrationKey' value that you retrieved from the LicenseService instance YAML in the SLS namespace (ibm-sls-<unique-string>)."
          - name: slsPublicCertificateUrl
            title: SLS public certificate URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the URL (preferebly with SAS token) of the service's public certificate that you retrieved from the 'ca.crt' file in the '<unique-string>-sls-cfg' secret in the MAS core namespace (mas-<unique-string>-core)."
          - name: udsEndpointUrl
            title: UDS endpoint URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the endpoint URL that you retrieved from the 'uds-endpoint' OpenShift route in the ibm-common-services namespace. URL should not have slash (/) at the end."
          - name: udsAPIKey
            title: UDS API key
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the service's API key that you retrieved from the 'uds-api-key' secret in the ibm-common-services namespace."
          - name: udsPublicCertificateUrl
            title: UDS public certificate URL
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the URL (preferebly with SAS token) of the service's public certificate that you retrieved from the 'ca-bundle.pem' file in the '<unique-string>-uds-cfg' route in the MAS core namespace."
          - name: googleCloudServiceAccount
            title: Google Cloud Service Account key
            stringBox:
              defaultValue: ""
            tooltip: 
              "Enter the JSON text from the Service Account key file"
          - name: googleProjectId
            title: Project Id
            stringBox:
              defaultValue: ""
            tooltip:
              "Enter the Project Id"
          - name: emailNotification
            title: Email Notification
            stringDropdown:
              values:
                - "true"
                - "false"
              defaultValueIndex:
                value: 0
            tooltip:
              "Indicate whether you want to receive emails that contain the connection details and credentials for the Suite. These emails are sent using the provided SMTP server details."
          - name: smtpHost
            title: SMTP Host
            stringBox:
              defaultValue: ""
            tooltip: 
              "Hostname of IP address of the SMTP server."
          - name: smtpPort
            title: SMTP Port
            stringBox:
              defaultValue: ""
            tooltip: 
              "Port of the SMTP server."
          - name: smtpUsername
            title: SMTP Username
            stringBox:
              defaultValue: ""
            tooltip: 
              "Username to be used with SMTP server."
          - name: smtpPassword
            title: SMTP password
            stringBox:
              defaultValue: ""
            tooltip: 
              "Password to be used with SMTP server."
          - name: notificattionEmailAddress
            emailBox:
              validation:
                regex: ^[a-zA-Z0-9!#$%&\'*+\/=?^_`{|}~\.-]+@[a-zA-Z0-9](?:[a-zA-Z0-9]?[.-]?[a-zA-Z0-9]+)+[[a-zA-Z0-9]{1}$
            title: Notification Email address
            tooltip: Indicate whether you want to receive emails that contain the connection details and credentials for the Suite. These emails are sent using the provided SMTP server details.
          placement: CUSTOM_TOP
          name: AppSetting
          title: Application Setting
      firewallRules:
      - port: '80'
        protocol: TCP
      - defaultOff: true
        port: '443'
        protocol: TCP
      images:
      - name: sp-edge-bootnode-build-20221104  # {"$ref":"#/definitions/io.k8s.cli.setters.image"}
        project: sp-edge-ocp-cluster-ipi # {"$ref":"#/definitions/io.k8s.cli.setters.projectId"}
      machineType:
        defaultMachineType:
          gceMachineType: e2-medium
      networkInterfaces:
        minCount: 1
        maxCount: 8      
      gceStartupScript:
        bashScriptContent: |
          #!/bin/bash
          # Initiate the provisioning process
          getMetadata() {
            curl http://metadata.google.internal/computeMetadata/v1/instance/attributes/$1 -H "Metadata-Flavor: Google"
          }
          filepath=/var/log/firstrun.txt

          if ! test -f $filepath ; then
            echo "file created" >> $filepath
            offeringType=`getMetadata offeringType`
            region=`getMetadata region`
            publicDomain=`getMetadata publicDomain`
            bootnodeSGIngressCidrIp=`getMetadata bootnodeSGIngressCidrIp`
            clusterSize=`getMetadata clusterSize`
            entitledRegistryKey=`getMetadata entitledRegistryKey`
            openShiftPullSecret=`getMetadata openShiftPullSecret`
            masLicenseUrl=`getMetadata masLicenseUrl`
            masManageDBUser=`getMetadata masManageDBUser`
            masManageDBPassword=`getMetadata masManageDBPassword`
            masManageDBJdbcUrl=`getMetadata masManageDBJdbcUrl`
            masManageDBCertificateUrl=`getMetadata masManageDBCertificateUrl`
            importDemoData=`getMetadata importDemoData`
            sshPublicKey=`getMetadata sshPublicKey`
            slsEndpointUrl=`getMetadata slsEndpointUrl`
            slsRegistrationKey=`getMetadata slsRegistrationKey`
            slsPublicCertificateUrl=`getMetadata slsPublicCertificateUrl`
            udsEndpointUrl=`getMetadata udsEndpointUrl`
            udsAPIKey=`getMetadata udsAPIKey`
            udsPublicCertificateUrl=`getMetadata udsPublicCertificateUrl`
            googleCloudServiceAccount=`getMetadata googleCloudServiceAccount`
            emailNotification=`getMetadata emailNotification`
            smtpHost=`getMetadata smtpHost`
            smtpPort=`getMetadata smtpPort`
            smtpUsername=`getMetadata smtpUsername`
            smtpPassword=`getMetadata smtpPassword`
            notificattionEmailAddress=`getMetadata notificattionEmailAddress`
            googleProjectId=`getMetadata googleProjectId`
            googleCloudServiceAccount=`getMetadata googleCloudServiceAccount`
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            cd /root
            git clone https://github.com/ibm-mas/ansible-devops.git
            cd ansible-devops
            rm -rf multicloud-bootstrap 1>/dev/null 2>&1
            git clone -b edge-gcp-support https://github.com/ibm-mas/multicloud-bootstrap.git
            cd multicloud-bootstrap
            find . -type f -name "*.sh" -exec chmod +x {} \;;
            ./init-async.sh gcp "$offeringType" "$region" null "$clusterSize" "{{ uniqstr }}" "$publicDomain" null "$sshPublicKey" null  "$entitledRegistryKey" "$openShiftPullSecret" "$masLicenseUrl" '' '' '' '' '' '' "$masManageDBUser" "$masManageDBPassword" "$masManageDBJdbcUrl" "$masManageDBCertificateUrl" "$importDemoData" '' '' '' '' "$emailNotification" "$notificattionEmailAddress" "$smtpHost" "$smtpPort" "$smtpUsername" "$smtpPassword" '' '' '' '' "$googleProjectId" "$googleCloudServiceAccount" '' '' '' '' '' '' '' '' '' '' '' 'dev' > mas-provisioning.log 2>&1;
          else
            echo "second execution"
          fi
      stackdriver:
        logging:
          defaultOn: false
        monitoring:
          defaultOn: false              